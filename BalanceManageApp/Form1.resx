<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>